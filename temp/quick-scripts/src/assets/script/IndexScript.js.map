{"version":3,"sources":["assets/script/IndexScript.js"],"names":["cc","Class","Component","properties","ClickCount","onLoad","NodeBtnAdd","find","log","on","Node","EventType","TOUCH_END","onBtnAddClicked","bind","CanvasNode","root","prefabPath","onResourceLoaded","errorMessage","loadedResource","Prefab","newMyPrefab","instantiate","addChild","buttonBG","getChildByName","newY","height","console","setPosition","loader","loadRes"],"mappings":";;;;;;AAAAA,EAAE,CAACC,KAAH,CACI;AACI,aAASD,EAAE,CAACE,SADhB;AAEIC,EAAAA,UAAU,EACV;AACIC,IAAAA,UAAU,EAAE,CADhB,CAEI;;AAFJ,GAHJ;AAQIC,EAAAA,MAAM,EAAE,kBACR;AACI;AACA,QAAIC,UAAU,GAAGN,EAAE,CAACO,IAAH,CAAS,eAAT,CAAjB,CAFJ,CAEiD;AAE7C;AACA;;AACA,QAAI,CAACD,UAAL,EAAkB;AAAEN,MAAAA,EAAE,CAACQ,GAAH,CAAO,yBAAP;AAAmC;AAAS,KANpE,CAQI;;;AACAF,IAAAA,UAAU,CAACG,EAAX,CAAeT,EAAE,CAACU,IAAH,CAAQC,SAAR,CAAkBC,SAAjC,EAA4C,KAAKC,eAAL,CAAqBC,IAArB,CAA2B,IAA3B,CAA5C;AACH,GAnBL;AAqBI;AACAD,EAAAA,eAAe,EAAE,2BACjB;AACI;AACA,QAAIE,UAAU,GAAGf,EAAE,CAACO,IAAH,CAAS,QAAT,CAAjB;;AACA,QAAI,CAACQ,UAAL,EAAkB;AAAEf,MAAAA,EAAE,CAACQ,GAAH,CAAQ,6BAAR;AAAyC;AAAS,KAH1E,CAKI;;;AACA,QAAIQ,IAAI,GAAG,IAAX,CANJ,CAQI;AACA;;AACA,QAAIC,UAAU,GAAG,UAAjB,CAVJ,CAWI;AAGA;AACA;;AACA,QAAIC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAUC,YAAV,EAAwBC,cAAxB,EACvB;AACI;AACA,UAAID,YAAJ,EAAmB;AAAEnB,QAAAA,EAAE,CAACQ,GAAH,CAAQ,oBAAoBW,YAA5B;AAA4C;AAAS;;AAC1E,UAAI,EAAGC,cAAc,YAAYpB,EAAE,CAACqB,MAAhC,CAAJ,EAA+C;AAAErB,QAAAA,EAAE,CAACQ,GAAH,CAAQ,uBAAR;AAAmC;AAAS,OAHjG,CAGkG;AAE9F;;;AACAQ,MAAAA,IAAI,CAACZ,UAAL,GANJ,CAQI;;AACA,UAAIkB,WAAW,GAAGtB,EAAE,CAACuB,WAAH,CAAgBH,cAAhB,CAAlB,CATJ,CAWI;;AACAL,MAAAA,UAAU,CAACS,QAAX,CAAqBF,WAArB,EAZJ,CAcI;AACA;;AACA,UAAIG,QAAQ,GAAGH,WAAW,CAACI,cAAZ,CAA4B,iBAA5B,CAAf;;AACA,UAAI,CAACD,QAAL,EAAgB;AAAEzB,QAAAA,EAAE,CAACQ,GAAH,CAAO,yBAAP;AAAmC;AAAS,OAjBlE,CAmBI;;;AACA,UAAImB,IAAI,GAAKX,IAAI,CAACZ,UAAL,GAAkBqB,QAAQ,CAACG,MAA7B,GAAwC,CAAxC,GAA8Cb,UAAU,CAACa,MAAX,GAAoB,CAAlE,GAAsE,GAAjF,CApBJ,CAqBI;;AAGAC,MAAAA,OAAO,CAACrB,GAAR,CAAYmB,IAAZ,EAxBJ,CAyBI;;AACAL,MAAAA,WAAW,CAACQ,WAAZ,CAAyB,CAAzB,EAA4BH,IAA5B,EA1BJ,CA4BI;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACH,KA1CD,CAhBJ,CA4DI;;;AACA3B,IAAAA,EAAE,CAAC+B,MAAH,CAAUC,OAAV,CAAmBf,UAAnB,EAA+BC,gBAA/B;AACH;AArFL,CADJ","sourceRoot":"/","sourcesContent":["cc.Class(\n    {\n        extends: cc.Component,\n        properties: \n        {\n            ClickCount: 0,\n            //除了計數器外，這邊我故意留空，我準備全部使用代碼來控制\n        },\n    \n        onLoad: function ()\n        {\n            //首先，我們先找到我們剛剛新增的按鈕\n            var NodeBtnAdd = cc.find( 'Canvas/BtnAdd' ); //cc.find回傳的是Node\n            \n            //然後，記得養成時時檢查變數是否存在、並且寫Log的習慣，\n            //上面的參數如果打錯，這邊就會印出Log，並且也不會再往下執行\n            if( !NodeBtnAdd ) { cc.log('找不到Button, 請確認find的參數正確'); return; }\n            \n            //接著，我們將監聽按鈕的點擊事件，關聯至下方的onBtnAddClicked方法\n            NodeBtnAdd.on( cc.Node.EventType.TOUCH_END, this.onBtnAddClicked.bind( this ) );\n        },\n    \n        //由於我們打算動態新增Prefab來進行使用，所以我們在這個點擊事件中進行載入\n        onBtnAddClicked: function()\n        {\n            //我們先動態取得Canvas\n            var CanvasNode = cc.find( 'Canvas' );\n            if( !CanvasNode ) { cc.log( '找不到Canvas畫布，請確認你的場景裡有Canvas' ); return; } \n            \n            //這邊先將 this 指標存到另一個變數, 在別的方法裡this是會被改變的\n            var root = this; \n            \n            //Prefab的路徑\n            //不過因為我們的MyPrefab直接就放在 /assets/resources/ 下，就直接寫\n            var prefabPath = 'MyPrefab';\n            //Ps. 假設你是放在在resources下的prefabs資料夾中，你就得寫 'prefabs/MyPrefab'\n            \n            \n            //這邊我們新增一個私有方法，來做為載入Prefab時的方法\n            //(當然你也可以直接寫在loadRes參數上，我只是覺得這樣比較容易看清楚)\n            var onResourceLoaded = function( errorMessage, loadedResource )\n            {\n                //一樣，養成檢查的好習慣\n                if( errorMessage ) { cc.log( '載入Prefab失敗, 原因:' + errorMessage ); return; }\n                if( !( loadedResource instanceof cc.Prefab ) ) { cc.log( '你載入的不是Prefab, 你做了什麼事?' ); return; } //這個是型別的檢查\n                \n                //我們將root裡的計數器加1\n                root.ClickCount++;\n                \n                //接著，我們就可以進行實例化了\n                var newMyPrefab = cc.instantiate( loadedResource );\n                \n                //我們先將這個建立出來的Prefab加入畫布裡\n                CanvasNode.addChild( newMyPrefab );\n                \n                //我們要開始設定位置，因為當時在Prefab我們沒有指定最外層的大小\n                //所以這邊我們要取得在MyPrefab中，我們加入的 \"SplitButtons_01\" 這張圖片的高度\n                var buttonBG = newMyPrefab.getChildByName( 'SplitButtons_01' );\n                if( !buttonBG ) { cc.log('找不到指定名稱的Node, 是不是哪裡搞錯了？'); return; }\n                \n                //所以，y軸就是利用計數器乘上圖片的高度，再加上10額外邊界後，再減去場景的高度除以二\n                var newY = ( root.ClickCount * buttonBG.height ) + 1 - ( CanvasNode.height / 2 )-400;\n                //減去場景高度這個動作，是為了讓每點擊一次按鈕，我們的Prefab就一直往上產生\n                \n\n                console.log(newY);\n                //設定位置，這邊x軸不變\n                newMyPrefab.setPosition( 0, newY );\n                \n                //接著，我們取得MyPrefab裡的Script，這個就是我們當時定的名稱\n                //var newMyPrefabScript = newMyPrefab.getComponent( 'script/MyPrefabScript' );\n                \n                //然後，我們就可以呼叫我們寫在該腳本中的方法了\n                //這邊我直接將計數器的值傳進去了\n                \n                //newMyPrefabScript.setNumberBy( root.ClickCount );\n                \n                //然後，我新增了一個CallBack事件，使用計時器機制，讓它在1秒之後再執行\n                //var startRun = function(){ newMyPrefabScript.Run(); };\n                \n                //呼叫計時器\n                //newMyPrefabScript.scheduleOnce( startRun, 1 );\n            };\n            \n            //這邊才是真的使用cc.loader進行載入，並且呼叫我們上面寫的方法\n            cc.loader.loadRes( prefabPath, onResourceLoaded );\n        },\n    });"]}